parameters:
  python_version: ''
  architecture: ''
  prefix: ''
  gpu: false

steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: ${{ parameters.python_version }}
      architecture: ${{ parameters.architecture }}
      gpu: $${{ parameters.gpu }}

  - script: |
      ${{ parameters.prefix }} python -m pip install --upgrade pip setuptools wheel
      ${{ parameters.prefix }} python -m pip install -r requirements.txt
    displayName: 'Install dependencies'

  - script: |
      ${{ parameters.prefix }} python setup.py build_ext --inplace
      ${{ parameters.prefix }} python setup.py sdist --formats=gztar
    displayName: 'Build sdist'

  - script: ${{ parameters.prefix }} python -m mypy thinc
    displayName: 'Run mypy'

  - task: DeleteFiles@1
    inputs:
      contents: 'thinc'
    displayName: 'Delete source directory'

  - script: |
      ${{ parameters.prefix }} python -m pip freeze --exclude tensorflow --exclude torch --exclude cupy-cuda110 --exclude mxnet > installed.txt
      ${{ parameters.prefix }} python -m pip uninstall -y -r installed.txt
    displayName: 'Uninstall all packages'

  - bash: |
      SDIST=$(${{ parameters.prefix }} python -c "import os;print(os.listdir('./dist')[-1])" 2>&1)
      ${{ parameters.prefix }} PIP_CONSTRAINT="build-constraints.txt" python -m pip install dist/$SDIST
    displayName: 'Install from sdist'

  - script: |
      ${{ parameters.prefix }} python -m pip install -r requirements.txt
      ${{ parameters.prefix }} python -m pip install tensorflow
      ${{ parameters.prefix }} python -m pip install "mxnet; sys_platform != 'win32'"
      ${{ parameters.prefix }} python -m pip install ipykernel pydot graphviz
      ${{ parameters.prefix }} python -m ipykernel install --name thinc-notebook-tests --user
    displayName: 'Install test deps'

  - script: |
      ${{ parameters.prefix }} python -m pip install "torch==1.7.1+cpu" -f https://download.pytorch.org/whl/torch_stable.html
    displayName: 'Install test deps CPU'
    condition: eq(${{ parameters.gpu }}, false)

  - script: |
      ${{ parameters.prefix }} python -m pip install "torch==1.7.1+cu110" -f https://download.pytorch.org/whl/torch_stable.html
      ${{ parameters.prefix }} python -m pip install cupy-cuda110
    displayName: 'Install test deps GPU'
    condition: eq(${{ parameters.gpu }}, true)

  - script: |
      ${{ parameters.prefix }} python -m pytest --pyargs thinc
    displayName: 'Run tests'
